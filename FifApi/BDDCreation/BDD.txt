
drop table if exists __EFMigrationsHistory;
drop table if exists Joueur;
drop table if exists JoueurMatch;
drop table if exists Match;
drop table if exists Poste;
drop table if exists Produit;
drop table if exists Marque;




CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE couleur (
    idcouleur int GENERATED BY DEFAULT AS IDENTITY,
    nomproduit varchar(150) NOT NULL,
    CONSTRAINT "PK_couleur" PRIMARY KEY (idcouleur)
);

CREATE TABLE marque (
    "idMarque" int GENERATED BY DEFAULT AS IDENTITY,
    "nomMarque" varchar(200) NOT NULL,
    CONSTRAINT "PK_marque" PRIMARY KEY ("idMarque")
);

CREATE TABLE match (
    "idMatch" int GENERATED BY DEFAULT AS IDENTITY,
    "scoreEquipeDomicile" int NOT NULL,
    "scoreEquipeExterieure" int NOT NULL,
    "nomMatch" Varchar(50) NOT NULL,
    "dateMatch" Date NOT NULL,
    CONSTRAINT "PK_match" PRIMARY KEY ("idMatch")
);

CREATE TABLE poste (
    idposte int GENERATED BY DEFAULT AS IDENTITY,
    "nomPoste" Varchar(150) NOT NULL,
    "descriptionPoste" Varchar(300) NOT NULL,
    CONSTRAINT "PK_poste" PRIMARY KEY (idposte)
);

CREATE TABLE taille (
    "idTaille" char(6) NOT NULL,
    "nomTaille" Varchar(50) NOT NULL,
    "descriptionTaille" Varchar(100) NOT NULL,
    CONSTRAINT "PK_taille" PRIMARY KEY ("idTaille")
);

CREATE TABLE produit (
    "MarqueId" int NOT NULL,
    idproduit int NOT NULL,
    nomproduit varchar(150) NOT NULL,
    descriptionproduit varchar(1000) NOT NULL,
    caracteristiquesproduit varchar(500) NOT NULL,
    CONSTRAINT pk_produit PRIMARY KEY ("MarqueId"),
    CONSTRAINT fk_produit_marque FOREIGN KEY ("MarqueId") REFERENCES marque ("idMarque")
);

CREATE TABLE joueur (
    "posteId" int NOT NULL,
    "idJoueur" int NOT NULL,
    "nomJoueur" Varchar(150) NOT NULL,
    "prenomJoueur" Varchar(150) NOT NULL,
    "sexeJoueur" Char(1) NOT NULL,
    "dateNaissanceJoueur" Date NOT NULL,
    "dateDecesJoueur" Date NOT NULL,
    "debutCarriereJoueur" Date NOT NULL,
    "finCarriereJoueur" Date NOT NULL,
    "descriptionJoueur" Varchar(1000) NOT NULL,
    CONSTRAINT pk_joueur PRIMARY KEY ("posteId"),
    CONSTRAINT fk_joueur_poste FOREIGN KEY ("posteId") REFERENCES poste (idposte)
);

CREATE TABLE "CouleurProduit" (
    "idCouleurProduit" int GENERATED BY DEFAULT AS IDENTITY,
    prix numeric(8,2) NOT NULL,
    codebarre varchar(48) NOT NULL,
    "produitId" int NOT NULL,
    "couleurId" int NOT NULL,
    "MatchId" integer NOT NULL,
    CONSTRAINT "pk_couleurProduit" PRIMARY KEY ("idCouleurProduit"),
    CONSTRAINT "fk_couleurProduit_couleur" FOREIGN KEY ("couleurId") REFERENCES couleur (idcouleur),
    CONSTRAINT "fk_couleurProduit_produit" FOREIGN KEY ("produitId") REFERENCES produit ("MarqueId")
);

CREATE TABLE "joueurMatch" (
    "joueurId" int NOT NULL,
    "matchId" int NOT NULL,
    "nbButs" int NOT NULL,
    CONSTRAINT "pk_joueurMatch" PRIMARY KEY ("matchId", "joueurId"),
    CONSTRAINT "fk_joueurMatch_joueur" FOREIGN KEY ("joueurId") REFERENCES joueur ("posteId"),
    CONSTRAINT "fk_joueurMatch_match" FOREIGN KEY ("matchId") REFERENCES match ("idMatch")
);

CREATE TABLE stock (
    "tailleId" char(6) NOT NULL,
    "couleurProduitId" int NOT NULL,
    quantite int NOT NULL,
    CONSTRAINT pk_stock PRIMARY KEY ("tailleId", "couleurProduitId"),
    CONSTRAINT fk_stock_couleur FOREIGN KEY ("couleurProduitId") REFERENCES "CouleurProduit" ("idCouleurProduit"),
    CONSTRAINT fk_stock_taille FOREIGN KEY ("tailleId") REFERENCES taille ("idTaille")
);

CREATE INDEX "IX_CouleurProduit_couleurId" ON "CouleurProduit" ("couleurId");

CREATE INDEX "IX_CouleurProduit_produitId" ON "CouleurProduit" ("produitId");

CREATE INDEX "IX_joueurMatch_joueurId" ON "joueurMatch" ("joueurId");

CREATE INDEX "IX_stock_couleurProduitId" ON stock ("couleurProduitId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240313075724_FifaBDD', '6.0.12');

COMMIT;
